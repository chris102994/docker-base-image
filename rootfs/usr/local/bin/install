#!/bin/sh

set -e # Exit on error

trap : TERM QUIT INT
trap cleanup EXIT

usage() {
    echo "usage: $(basename "$0") [--virtual NAME ] PKG [PKG...]"
    exit 1
}

not_supported() {
    echo "not_supported: $(basename "$0") doesn't support this package manager."
    exit 1
}

cleanup() {
    echo "Cleaning up..."
    case "$MANAGER" in
                    apt-get )
                        $MANAGER -q clean
                        rm -rf \
                                /var/lib/apt/lists/* \
                                /var/log/apt/* \
                                /var/log/dpkg.log \
                                /var/log/alternatives.log
                        ;;
                    apk )
                        rm -rf \
                                /var/cache/misc/* \
                                /var/cache/apk/* \
                                /var/lib/apk/*
                        ;;
                    *)
                        not_supported
                        ;;
    esac
}

install() {
    echo "Installing package(s)..."
    case "$MANAGER" in
                    apt-get )
                        $MANAGER -q update
                        $MANAGER install -y --no-install-recommends "$@"
                        ;;
                    apk )
                        $MANAGER --no-cache add "$@"
                        ;;
                    *)
                        not_supported
                        ;;
    esac
}

check_installed() {
    echo "Ensuring that everything was installed"
    UNINSTALLED_PKGS=
    echo "$@"
    for PKG in "$@"
    do
        if ! check_individual_install $PKG; then
            $UNINSTALLED_PKGS="$UNINSTALLED_PKGS $PKG"
        fi
    done

    if [ -z "$UNINSTALLED_PKGS" ]; then
        echo "Successfully installed: $@"
    else
        # Ensure that a failure code is returned if we couldn't install everything.
        echo "The following packages couldn't be installed: $UNINSTALLED_PKGS"
        exit 1
    fi
}

check_individual_install() {
    case "$MANAGER" in
                    apt-get )
                        dpkg --status "$1" 2>&1 | grep -q "^Status: install ok installed"
                        ;;
                    apk )
                        $MANAGER info 2>/dev/null | grep -q "^$1\$"
                        ;;
                    *)
                        not_supported
                        ;;
    esac
}

get_pkg_manager() {
    MANAGER=
    if [ -f "/etc/debian_version" ]; then
        MANAGER=apt-get
    elif [ -d "/etc/apk/" ]; then
        MANAGER=apk
    else
        not_supported
    fi
    echo "Package Manager: $MANAGER"
}


# Main

# Ensure root privileges so that not just anybody can install packages
if [ "$(id -u)" != 0 ]; then
    echo "This script must be run as root!"
    exit 1
fi

# If there are no arguments given then we can't install anything ...
if [ -z "$1" ]; then
    usage
fi

get_pkg_manager

# If this is virtual then we want to capture that
VIRTUAL_PKG=
if [ "$1" = "--virtual" ]; then
    shift
    # If there are no packages given then we can't install anything ...
    if [ -z "$1" ]; then
        echo "No virtual packages listed..."
        usage
    fi
    VIRTUAL_PKG="$1"
    shift
    echo "Package Group Name: $VIRTUAL_PKG"
    if [ -f /tmp/$VIRTUAL_PKG.virtual ]; then
        echo "ERROR: Virtual Package '$VIRTUAL_PKG' already exists..."
        exit 1
    fi
    echo "$*" >> /tmp/$VIRTUAL_PKG.virtual
fi

# Try to install everything
install "$@"

check_installed "$@"